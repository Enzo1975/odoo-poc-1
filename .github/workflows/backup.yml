name: Odoo Backup

# Trigger di esecuzione del workflow
on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 2 * * *' # Esecuzione programmata (ogni giorno alle 2:00 AM)
  
jobs:
  backup:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Setup SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY"  base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Genera known_hosts
        run: |
          ssh-keyscan -t ed25519 -p 23 -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          
      - name: Test connessione SSH
        run: |
          ssh -o StrictHostKeyChecking=no -p 23 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'Connessione riuscita!'"

      - name: Crea file timestamp sul server
        run: |
          ssh -o StrictHostKeyChecking=no -p 23 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 
          echo $(date '+%Y-%m-%d %H:%M:%S\n') >> ~/backup_timestamp.txt  

      - name: Esegui backup Odoo
        run: |
          ssh -o StrictHostKeyChecking=no -p 23 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            mkdir -p ~/odoo_backups
            TIMESTAMP=\$(date '+%Y-%m-%d_%H-%M-%S')
            BACKUP_FILE=odoo_backup_\$TIMESTAMP.tar.gz


            # Esegui il backup utilizzando docker exec
            echo \"Avvio backup del database...\"
            docker exec postgres_container pg_dump -U odoo -d odoo | gzip > ~/odoo_backups/\${BACKUP_FILENAME}
            
            # Verifica la dimensione del file di backup
            BACKUP_SIZE=\$(du -h ~/odoo_backups/\${BACKUP_FILENAME} | cut -f1)
            echo \"Backup completato: \${BACKUP_FILENAME} (Dimensione: \${BACKUP_SIZE})\"
            

          