name: Odoo Backup

# Trigger di esecuzione del workflow
on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 2 * * *' # Esecuzione programmata (ogni giorno alle 2:00 AM)
  
jobs:
  backup:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Setup SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY"  base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Genera known_hosts
        run: |
          ssh-keyscan -t ed25519 -p 23 -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          
      - name: Test connessione SSH
        run: |
          ssh -o StrictHostKeyChecking=no -p 23 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'Connessione riuscita!'"
          
      - name: Crea file timestamp sul server
        run: |
          ssh -o StrictHostKeyChecking=no -p 23 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 
          echo $(date '+%Y-%m-%d %H:%M:%S\n') >> ~/backup_timestamp.txt  

      - name: Individuazione del container di PostgreSQL
        id: find_postgres_container
        run: |
          ssh -o StrictHostKeyChecking=no -p 23 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}  << 'EOF'
           POSTGRES_CONTAINER=$(docker ps --format '{{.Names}}' | grep -i postgres | head -1)        
 
           if [ -z \"\$POSTGRES_CONTAINER\" ]; then
             echo "Nessun container PostgreSQL trovato!"
           exit 1
           fi

      - name: Debug
        run: |
          echo "Container PostgreSQL trovato: ${{ env.container_name }}"   
          

      - name: Esegui backup del database Odoo
        shell: bash
        run: |
           
            # Estrai il nome del container PostgreSQL dall'output del passo precedente
            CONTAINER='${{ steps.find_postgres.outputs.container_name }}'
            echo \"Utilizzo container: \$CONTAINER\"
           
        # Esegui il backup del database Odoo     
      - name: Copia lo script di backup sul server remoto
        run: |
           scp -P 23 scripts/backup.sh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/scripts/backup.sh && chmod 700 ~scripts/backup.sh
      
